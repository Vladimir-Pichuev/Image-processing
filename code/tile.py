from PIL import Image

# (Функция из интернетa,
# в которой я конечно же не буду разбираться, описание ниже)


def tile(*images, vertical=False):
    """
Первый параметр в tile() использует оператор распаковки (*),
поэтому в качестве входных аргументов можно
использовать любое количество объектов типа PIL.Image.
Для параметра ключевого слова vertical можно установить значение True,
если вы хотите размещать изображения вертикально, а не горизонтально.
Эта функция предполагает, что все изображения имеют одинаковый размер.

Общий размер окончательного изображения рассчитывается исходя из размера
изображений и количества используемых изображений.
Затем вы создаете новый объект изображения с тем же режимом,
что и исходные изображения, и с размером общего экрана.

Цикл for вставляет изображения, которые вы вводите при вызове функции,
в окончательное изображение.
Функция возвращает окончательный объект Image,
содержащий все изображения рядом.

Изображение в данной статье, показывающее три цветовых режима для клубники,
было получено путем вызова функции tile() следующим образом:

strawberry_channels = tile(red_merge, green_merge, blue_merge)
Эта функция будет использоваться для создания всех изображений,
которые состоят из нескольких в текущем руководстве.
    """
    width, height = images[0].width, images[0].height
    tiled_size = (
        (width, height * len(images))
        if vertical
        else (width * len(images), height)
    )
    tiled_img = Image.new(images[0].mode, tiled_size)
    row, col = 0, 0
    for image in images:
        tiled_img.paste(image, (row, col))
        if vertical:
            col += height
        else:
            row += width

    return tiled_img
